yarn init -y

yarn add typescript -D
yarn add express
yarn add @types/express -D

* cria o tsconfig.json
yarn tsc --init

* para rodar a aplicação, e reload automatico
yarn add ts-node-dev -D

* biblioteca para tratar erros, por exemplo login errado e tal
yarn add express-async-errors

* para qualquer ip conseguir acessar meu back end
yarn add cors
yarn add @types/cors -D


* * * * * * ** * *  * * * ** 
Instalei tbm o Beekeeper Studio
ele serve só pra facilitar a visualização do nosso banco de dados

Utilizando o Prisma
* https://www.prisma.io/docs/getting-started/quickstart

1 - Add to existing project
2 - Relational databases - Utilizei o Postgres
3 - yarn add prisma
4 - Install Prisma Client - yarn add @prisma/client

5 - npx prisma init - Inicializar a configuração do PRISMA


****** * ** * ** ** *** * ** ** ** ** 
****** * ** * ** ** *** * ** ** ** ** 
-- LIB para criptografar SENHAS
yarn add bcryptjs
yarn add @types/bcryptjs -D

-- para criat TOKEN
yarn add jsonwebtoken
yarn add @types/jsonwebtoken -D

https://www.md5hashgenerator.com/ <- gerar uma senha criptografada
https://jwt.io/ <- para ver seu token descriptografado
****** * ** * ** ** *** * ** ** ** ** 
****** * ** * ** ** *** * ** ** ** ** 

-- para acessar nossas variaveis de ambiente
yarn add dotenv


-- para trabalhar com envio de imagens
yarn add multer
yarn add @types/multer -D


****** * ** * ** ** *** * ** ** ** ** 
   DEPLOY BACK END + DB NO HEROKU

1 - no arquivo .env coloca: PORT=3333
2 - no server.ts coloca: process.env.PORT (no lugar de 3333)
3 - no tsconfig.json coloca: "outDir": "./dist
4 - no package.json em scripts colocar: "build": "tsc --build", e o "start": "node dist/server.js"
5 - criei o arquivo Procfile na raiz do projeto, para o Heroku entender as instruções que eu passar dentro desse arquivo
6 - roda: yarn build
7 - roda em produção para testar: yarn start
8 - mandar tudo para o git
9 - Cria o projeto no Heroku, conecta com o git

10 - Agora antes de dar Deploy Branch vai em Settings, e em Reveal Config Vars
11 - em Reveal Config Vars, coloca suas variaveis de ambiente, o que vc fez no arquivo .env na raiz desse projeto

    CRIAR BANCO DE DADOS NO HEROKU
12 - vai em Resources e em Add-ons pesquise por Heroku Postgres, escolha se sera Free ou pago. e crie. 
13 - após criar CLICA nele, e abrirá uma nova aba para pegar os dados do seu banco que vc fez no projeto
14 - CLICA em Settings dele, e em seguida CLICA em DATABASE CREDENTIALS(VIEW CREDENTIALS)
15 - em seguida pega a URI para colocar na variavel de ambiente. (item 10 acima)
16 - após o 15 confira se o nome DATABASE_URL é o mesmo que vc colocou no .env do projeto

    17 - AGORA SÓ DAR DEPLOY BRANCH 
    
    
OBS:  e em DATABASE CREDENTIALS(VIEW CREDENTIALS) eu posso acessar meu banco no postgres, só pegar as informações 
e conectar com o Heroku no postgres instalado no meu pc
